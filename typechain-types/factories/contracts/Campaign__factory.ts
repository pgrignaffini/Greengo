/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Campaign, CampaignInterface } from "../../contracts/Campaign";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_campaignName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_goalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "FundsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [],
    name: "claimFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAmountCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getDonationBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonationsCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEndDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGoalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getStartDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGoalReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600060035560006007553480156200001b57600080fd5b5060405162000ad738038062000ad78339810160408190526200003e9162000168565b620000493362000072565b83516200005e906001906020870190620000c2565b5060029290925560045560055550620002ad565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000d0906200025a565b90600052602060002090601f016020900481019282620000f457600085556200013f565b82601f106200010f57805160ff19168380011785556200013f565b828001600101855582156200013f579182015b828111156200013f57825182559160200191906001019062000122565b506200014d92915062000151565b5090565b5b808211156200014d576000815560010162000152565b600080600080608085870312156200017e578384fd5b84516001600160401b038082111562000195578586fd5b818701915087601f830112620001a9578586fd5b815181811115620001be57620001be62000297565b604051601f8201601f19908116603f01168101908382118183101715620001e957620001e962000297565b81604052828152602093508a8484870101111562000205578889fd5b8891505b8282101562000228578482018401518183018501529083019062000209565b828211156200023957888484830101525b9289015160408a01516060909a0151939b909a509297509195505050505050565b600181811c908216806200026f57607f821691505b602082108114156200029157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61081a80620002bd6000396000f3fe6080604052600436106100e15760003560e01c8063ac3077731161007f578063d3eb6f6111610059578063d3eb6f611461022e578063ed88c68e14610251578063f2fde38b14610259578063fdb729d81461027957600080fd5b8063ac307773146101ef578063b135648814610204578063b2d5ae441461021957600080fd5b806378f305c6116100bb57806378f305c614610192578063828cfdfd146101a757806383da473e146101bc5780638da5cb5b146101d157600080fd5b80630ee2cb10146101255780635f410b221461015c578063715018a61461017b57600080fd5b3661012057604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874910160405180910390a1005b600080fd5b34801561013157600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561016857600080fd5b506002545b604051908152602001610153565b34801561018757600080fd5b506101906102af565b005b34801561019e57600080fd5b5060045461016d565b3480156101b357600080fd5b5060035461016d565b3480156101c857600080fd5b5060075461016d565b3480156101dd57600080fd5b506000546001600160a01b031661013f565b3480156101fb57600080fd5b506101906102c3565b34801561021057600080fd5b5060055461016d565b34801561022557600080fd5b506101906103d2565b34801561023a57600080fd5b506002546003546040519111158152602001610153565b6101906104e9565b34801561026557600080fd5b50610190610274366004610726565b610603565b34801561028557600080fd5b5061016d610294366004610726565b6001600160a01b031660009081526006602052604090205490565b6102b761067c565b6102c160006106d6565b565b6102cb61067c565b60055442116102f55760405162461bcd60e51b81526004016102ec90610754565b60405180910390fd5b60025460035410156103575760405162461bcd60e51b815260206004820152602560248201527f54686520676f616c20616d6f756e7420686173206e6f74206265656e2072656160448201526431b432b21760d91b60648201526084016102ec565b600080546003546040516001600160a01b039092169281156108fc029290818181858888f19350505050158015610392573d6000803e3d6000fd5b5060035460405190815233907fa65a8b4f7f65a1063243d7f7e9e4da00ff767599acf21549ef2548a45d1695ae9060200160405180910390a26000600355565b60055442116103f35760405162461bcd60e51b81526004016102ec90610754565b600254600354106104505760405162461bcd60e51b815260206004820152602160248201527f54686520676f616c20616d6f756e7420686173206265656e20726561636865646044820152601760f91b60648201526084016102ec565b336000908152600660205260409020546104a45760405162461bcd60e51b81526020600482015260156024820152742cb7ba903430bb32903737ba103237b730ba32b21760591b60448201526064016102ec565b33600081815260066020526040808220805490839055905190929183156108fc02918491818181858888f193505050501580156104e5573d6000803e3d6000fd5b5050565b60045442101561054a5760405162461bcd60e51b815260206004820152602660248201527f5468652066756e64696e6720706861736520686173206e6f742073746172746560448201526532103cb2ba1760d11b60648201526084016102ec565b60055442106105af5760405162461bcd60e51b815260206004820152602b60248201527f5468652066756e64696e67207068617365206f6620746869732070726f6a656360448201526a3a1034b99032b73232b21760a91b60648201526084016102ec565b33600090815260066020526040812080543492906105ce90849061079b565b9250508190555034600360008282546105e7919061079b565b9091555050600780549060006105fc836107b3565b9190505550565b61060b61067c565b6001600160a01b0381166106705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ec565b610679816106d6565b50565b6000546001600160a01b031633146102c15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ec565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610737578081fd5b81356001600160a01b038116811461074d578182fd5b9392505050565b60208082526027908201527f5468652066756e64696e67207068617365206973207374696c6c20696e20707260408201526637b3b932b9b99760c91b606082015260800190565b600082198211156107ae576107ae6107ce565b500190565b60006000198214156107c7576107c76107ce565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122004d4fa71790bb3529873a3e726e02b2c6b33c471d2f64a890513af36ea0d9bd664736f6c63430008040033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _campaignName: PromiseOrValue<string>,
    _goalAmount: PromiseOrValue<BigNumberish>,
    _startDate: PromiseOrValue<BigNumberish>,
    _endDate: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Campaign> {
    return super.deploy(
      _campaignName,
      _goalAmount,
      _startDate,
      _endDate,
      overrides || {}
    ) as Promise<Campaign>;
  }
  override getDeployTransaction(
    _campaignName: PromiseOrValue<string>,
    _goalAmount: PromiseOrValue<BigNumberish>,
    _startDate: PromiseOrValue<BigNumberish>,
    _endDate: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _campaignName,
      _goalAmount,
      _startDate,
      _endDate,
      overrides || {}
    );
  }
  override attach(address: string): Campaign {
    return super.attach(address) as Campaign;
  }
  override connect(signer: Signer): Campaign__factory {
    return super.connect(signer) as Campaign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new utils.Interface(_abi) as CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Campaign {
    return new Contract(address, _abi, signerOrProvider) as Campaign;
  }
}

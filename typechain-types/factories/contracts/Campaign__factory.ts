/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Campaign, CampaignInterface } from "../../contracts/Campaign";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_campaignName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_goalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "DonationOccurred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "FundsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [],
    name: "claimFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAmountCollected",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonationsCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getDonationsDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "donor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Campaign.Donation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEndDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGoalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStartDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGoalReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600060035560006007553480156200001b57600080fd5b5060405162000bf138038062000bf18339810160408190526200003e9162000168565b620000493362000072565b83516200005e906001906020870190620000c2565b5060029290925560045560055550620002ad565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000d0906200025a565b90600052602060002090601f016020900481019282620000f457600085556200013f565b82601f106200010f57805160ff19168380011785556200013f565b828001600101855582156200013f579182015b828111156200013f57825182559160200191906001019062000122565b506200014d92915062000151565b5090565b5b808211156200014d576000815560010162000152565b600080600080608085870312156200017e578384fd5b84516001600160401b038082111562000195578586fd5b818701915087601f830112620001a9578586fd5b815181811115620001be57620001be62000297565b604051601f8201601f19908116603f01168101908382118183101715620001e957620001e962000297565b81604052828152602093508a8484870101111562000205578889fd5b8891505b8282101562000228578482018401518183018501529083019062000209565b828211156200023957888484830101525b9289015160408a01516060909a0151939b909a509297509195505050505050565b600181811c908216806200026f57607f821691505b602082108114156200029157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61093480620002bd6000396000f3fe6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b146101b4578063ac307773146101dc578063b1356488146101f1578063d3eb6f6114610206578063ed88c68e14610229578063f2fde38b1461023157600080fd5b80635f410b22146100ef578063715018a61461011357806378f305c61461012a578063828cfdfd1461013f57806383da473e146101545780638d3224061461016957600080fd5b366100ea57604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874910160405180910390a1005b600080fd5b3480156100fb57600080fd5b506002545b6040519081526020015b60405180910390f35b34801561011f57600080fd5b50610128610251565b005b34801561013657600080fd5b50600454610100565b34801561014b57600080fd5b50600354610100565b34801561016057600080fd5b50600754610100565b34801561017557600080fd5b50610189610184366004610842565b610265565b6040805182516001600160a01b0316815260208084015190820152918101519082015260600161010a565b3480156101c057600080fd5b506000546040516001600160a01b03909116815260200161010a565b3480156101e857600080fd5b506101286102d4565b3480156101fd57600080fd5b50600554610100565b34801561021257600080fd5b50600254600354604051911115815260200161010a565b61012861041f565b34801561023d57600080fd5b5061012861024c366004610814565b610687565b610259610700565b610263600061075a565b565b610292604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b50600090815260066020908152604091829020825160608101845281546001600160a01b03168152600182015492810192909252600201549181019190915290565b6102dc610700565b60055442116103425760405162461bcd60e51b815260206004820152602760248201527f5468652066756e64696e67207068617365206973207374696c6c20696e20707260448201526637b3b932b9b99760c91b60648201526084015b60405180910390fd5b60025460035410156103a45760405162461bcd60e51b815260206004820152602560248201527f54686520676f616c20616d6f756e7420686173206e6f74206265656e2072656160448201526431b432b21760d91b6064820152608401610339565b600080546003546040516001600160a01b039092169281156108fc029290818181858888f193505050501580156103df573d6000803e3d6000fd5b5060035460405190815233907fa65a8b4f7f65a1063243d7f7e9e4da00ff767599acf21549ef2548a45d1695ae9060200160405180910390a26000600355565b6104496040518060400160405280600881526020016702737bb9034b99d160c51b815250426107aa565b61047c6040518060400160405280600f81526020016e029ba30b93a103230ba329034b99d1608d1b8152506004546107aa565b6104ad6040518060400160405280600d81526020016c022b732103230ba329034b99d1609d1b8152506005546107aa565b6000546001600160a01b03163314156104ff5760405162461bcd60e51b815260206004820152601460248201527327bbb732b91031b0b73737ba103237b730ba329760611b6044820152606401610339565b6004544210156105605760405162461bcd60e51b815260206004820152602660248201527f5468652066756e64696e6720706861736520686173206e6f742073746172746560448201526532103cb2ba1760d11b6064820152608401610339565b60055442106105c55760405162461bcd60e51b815260206004820152602b60248201527f5468652066756e64696e67207068617365206f6620746869732070726f6a656360448201526a3a1034b99032b73232b21760a91b6064820152608401610339565b604080516060810182523381524260208083019182523483850181815260075460009081526006909352948220935184546001600160a01b0319166001600160a01b0390911617845591516001840155925160029092019190915560038054919290916106339084906108b5565b909155505060075460405134815233907f71adcff281b29ce9baf84e45b10a812e86c7aa9444c3cf519b37fae0aa7b26d29060200160405180910390a360078054906000610680836108cd565b9190505550565b61068f610700565b6001600160a01b0381166106f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610339565b6106fd8161075a565b50565b6000546001600160a01b031633146102635760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610339565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107ef82826040516024016107c092919061085a565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526107f3565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600060208284031215610825578081fd5b81356001600160a01b038116811461083b578182fd5b9392505050565b600060208284031215610853578081fd5b5035919050565b6040815260008351806040840152815b81811015610887576020818701810151606086840101520161086a565b818111156108985782606083860101525b50602083019390935250601f91909101601f191601606001919050565b600082198211156108c8576108c86108e8565b500190565b60006000198214156108e1576108e16108e8565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200e031775d222e591887160462cf4d9e4bae6230903e98e6f2a67c22ec78b980464736f6c63430008040033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _campaignName: PromiseOrValue<string>,
    _goalAmount: PromiseOrValue<BigNumberish>,
    _startDate: PromiseOrValue<BigNumberish>,
    _endDate: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Campaign> {
    return super.deploy(
      _campaignName,
      _goalAmount,
      _startDate,
      _endDate,
      overrides || {}
    ) as Promise<Campaign>;
  }
  override getDeployTransaction(
    _campaignName: PromiseOrValue<string>,
    _goalAmount: PromiseOrValue<BigNumberish>,
    _startDate: PromiseOrValue<BigNumberish>,
    _endDate: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _campaignName,
      _goalAmount,
      _startDate,
      _endDate,
      overrides || {}
    );
  }
  override attach(address: string): Campaign {
    return super.attach(address) as Campaign;
  }
  override connect(signer: Signer): Campaign__factory {
    return super.connect(signer) as Campaign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new utils.Interface(_abi) as CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Campaign {
    return new Contract(address, _abi, signerOrProvider) as Campaign;
  }
}
